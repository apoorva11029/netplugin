Using version: v0.1-07-14-2016.07-06-17.UTC
OS is supported.
OS version matched.
Loaded plugins: fastestmirror, langpacks
Loading mirror speeds from cached hostfile
 * base: centos.unixheads.org
 * epel: reflector.westga.edu
 * extras: mirrors.mit.edu
 * updates: mirror.atlanticmetro.net
Package epel-release-7-7.noarch already installed and latest version
No package epel-testing available.
Package git-1.8.3.1-6.el7_2.1.x86_64 already installed and latest version
Package wget-1.14-10.el7_0.1.x86_64 already installed and latest version
Nothing to do
Loaded plugins: fastestmirror, langpacks
Loading mirror speeds from cached hostfile
 * base: centos.unixheads.org
 * epel: reflector.westga.edu
 * epel-testing: reflector.westga.edu
 * extras: centos.mirrors.tds.net
 * updates: mirror.cc.columbia.edu
Package ansible-2.1.0.0-1.el7.noarch already installed and latest version
Nothing to do
Parsing config file...
 
             ==== Contiv Netplugin Demo Installer ====
 
Netplugin Cluster will be set up on the following servers in ACI mode: 
 
  10.193.246.70  
  10.193.246.71  
 
 
Current branch master is up to date.
Verifying ansible reachability
Verifying OS versions on all hosts...
OS is supported.
OS version matched.
OS is supported.
OS version matched.
Verifying sudo access on all hosts...

Ansible access and OS version verification completed on all hosts
-----------------
Contents of ./.gen/contiv_hosts:
-----------------
[netplugin-node]
node1 ansible_ssh_host=10.193.246.70 contiv_network_mode=aci control_interface=eno16780032 netplugin_if=eno33559296 fwd_mode=bridge
node2 ansible_ssh_host=10.193.246.71 contiv_network_mode=aci control_interface=eno16780032 netplugin_if=eno33559296 fwd_mode=bridge
[netplugin-node:vars]
apic_url=https://10.193.231.33:443
apic_username=admin
apic_password=ins3965!
apic_phys_domain=TEST-Phys-Dom
apic_epg_bridge_domain=not_specified
apic_contracts_unrestricted_mode=no
apic_leaf_nodes=topology/pod-1/node-101,topology/pod-1/node-102
-----------------
In restart mode
Removing containers
Stopping all services

PLAY [all] *********************************************************************

TASK [setup] *******************************************************************
ok: [node1]
ok: [node2]

TASK [include_vars] ************************************************************
ok: [node1] => (item=contiv_network)
ok: [node2] => (item=contiv_network)
ok: [node1] => (item=contiv_storage)
ok: [node2] => (item=contiv_storage)
ok: [node1] => (item=swarm)
ok: [node2] => (item=swarm)
ok: [node2] => (item=ucp)
ok: [node1] => (item=ucp)
ok: [node2] => (item=docker)
ok: [node1] => (item=docker)
ok: [node2] => (item=etcd)
ok: [node1] => (item=etcd)

TASK [include] *****************************************************************
included: /home/admin/src/github.com/contiv/netplugin/systemtests/ansible/roles/ucarp/tasks/cleanup.yml for node2, node1
included: /home/admin/src/github.com/contiv/netplugin/systemtests/ansible/roles/contiv_network/tasks/cleanup.yml for node2, node1
included: /home/admin/src/github.com/contiv/netplugin/systemtests/ansible/roles/contiv_storage/tasks/cleanup.yml for node2, node1
included: /home/admin/src/github.com/contiv/netplugin/systemtests/ansible/roles/swarm/tasks/cleanup.yml for node2, node1
included: /home/admin/src/github.com/contiv/netplugin/systemtests/ansible/roles/ucp/tasks/cleanup.yml for node2, node1
included: /home/admin/src/github.com/contiv/netplugin/systemtests/ansible/roles/etcd/tasks/cleanup.yml for node2, node1
included: /home/admin/src/github.com/contiv/netplugin/systemtests/ansible/roles/nfs/tasks/cleanup.yml for node2, node1
included: /home/admin/src/github.com/contiv/netplugin/systemtests/ansible/roles/docker/tasks/cleanup.yml for node2, node1

TASK [stop ucarp] **************************************************************
fatal: [node2]: FAILED! => {"changed": false, "failed": true, "msg": "systemd could not find the requested service \"'ucarp'\": "}
...ignoring
fatal: [node1]: FAILED! => {"changed": false, "failed": true, "msg": "systemd could not find the requested service \"'ucarp'\": "}
...ignoring

TASK [stop netmaster] **********************************************************
fatal: [node1]: FAILED! => {"changed": false, "failed": true, "msg": "failure 1 running systemctl show for 'netmaster': Failed to get properties: Access denied\n"}
...ignoring
fatal: [node2]: FAILED! => {"changed": false, "failed": true, "msg": "failure 1 running systemctl show for 'netmaster': Failed to get properties: Access denied\n"}
...ignoring

TASK [stop aci-gw container] ***************************************************
ok: [node1]
ok: [node2]

TASK [stop netplugin] **********************************************************
fatal: [node2]: FAILED! => {"changed": false, "failed": true, "msg": "failure 1 running systemctl show for 'netplugin': Failed to get properties: Access denied\n"}
...ignoring
fatal: [node1]: FAILED! => {"changed": false, "failed": true, "msg": "failure 1 running systemctl show for 'netplugin': Failed to get properties: Access denied\n"}
...ignoring

TASK [cleanup netmaster host alias] ********************************************
changed: [node2]
changed: [node1]

TASK [cleanup iptables for contiv network control plane] ***********************
changed: [node1] => (item=9001)
changed: [node2] => (item=9001)
changed: [node1] => (item=9002)
changed: [node2] => (item=9002)
changed: [node1] => (item=9003)
changed: [node2] => (item=9003)
changed: [node1] => (item=9999)
changed: [node2] => (item=9999)
changed: [node1] => (item=8080)
changed: [node2] => (item=8080)
changed: [node1] => (item=179)
changed: [node2] => (item=179)

TASK [include] *****************************************************************
included: /home/admin/src/github.com/contiv/netplugin/systemtests/ansible/roles/contiv_network/tasks/ovs_cleanup.yml for node1, node2

TASK [cleanup ovs vlan state] **************************************************
changed: [node1]
changed: [node2]

TASK [cleanup ovs vxlan state] *************************************************
changed: [node1]
changed: [node2]

TASK [cleanup ports] ***********************************************************
changed: [node1]
changed: [node2]

TASK [debug] *******************************************************************
ok: [node1] => {
    "ports": {
        "changed": true, 
        "cmd": "set -x; for p in $(ifconfig | grep vport | awk '{print $1}'); do\n ip link delete $p type veth;\n done", 
        "delta": "0:00:00.051158", 
        "end": "2016-07-22 10:03:44.011036", 
        "rc": 0, 
        "start": "2016-07-22 10:03:43.959878", 
        "stderr": "++ ifconfig\n++ grep vport\n++ awk '{print $1}'\n+ for p in '$(ifconfig | grep vport | awk '\\''{print $1}'\\'')'\n+ ip link delete vvport1: type veth\n+ for p in '$(ifconfig | grep vport | awk '\\''{print $1}'\\'')'\n+ ip link delete vvport2: type veth", 
        "stdout": "", 
        "stdout_lines": [], 
        "warnings": []
    }
}
ok: [node2] => {
    "ports": {
        "changed": true, 
        "cmd": "set -x; for p in $(ifconfig | grep vport | awk '{print $1}'); do\n ip link delete $p type veth;\n done", 
        "delta": "0:00:00.042988", 
        "end": "2016-07-22 10:03:44.019480", 
        "rc": 0, 
        "start": "2016-07-22 10:03:43.976492", 
        "stderr": "++ ifconfig\n++ grep vport\n++ awk '{print $1}'\n+ for p in '$(ifconfig | grep vport | awk '\\''{print $1}'\\'')'\n+ ip link delete vvport3: type veth\n+ for p in '$(ifconfig | grep vport | awk '\\''{print $1}'\\'')'\n+ ip link delete vvport4: type veth", 
        "stdout": "", 
        "stdout_lines": [], 
        "warnings": []
    }
}

TASK [deny openvswitch_t type in selinux] **************************************
changed: [node1]
changed: [node2]

TASK [cleanup iptables for vxlan vtep port] ************************************
changed: [node1] => (item=4789)
changed: [node2] => (item=4789)

TASK [stop volmaster] **********************************************************
fatal: [node1]: FAILED! => {"changed": false, "failed": true, "msg": "systemd could not find the requested service \"'volmaster'\": "}
...ignoring
fatal: [node2]: FAILED! => {"changed": false, "failed": true, "msg": "systemd could not find the requested service \"'volmaster'\": "}
...ignoring

TASK [stop volsupervisor] ******************************************************
fatal: [node1]: FAILED! => {"changed": false, "failed": true, "msg": "systemd could not find the requested service \"'volsupervisor'\": "}
...ignoring
fatal: [node2]: FAILED! => {"changed": false, "failed": true, "msg": "systemd could not find the requested service \"'volsupervisor'\": "}
...ignoring

TASK [stop volplugin] **********************************************************
fatal: [node1]: FAILED! => {"changed": false, "failed": true, "msg": "systemd could not find the requested service \"'volplugin'\": "}
...ignoring
fatal: [node2]: FAILED! => {"changed": false, "failed": true, "msg": "systemd could not find the requested service \"'volplugin'\": "}
...ignoring

TASK [stop swarm] **************************************************************
changed: [node2]
changed: [node1]

TASK [cleanup iptables for swarm] **********************************************
changed: [node1] => (item=2375)
changed: [node2] => (item=2375)

TASK [stop ucp] ****************************************************************
fatal: [node1]: FAILED! => {"changed": false, "failed": true, "msg": "systemd could not find the requested service \"'ucp'\": "}
...ignoring
fatal: [node2]: FAILED! => {"changed": false, "failed": true, "msg": "systemd could not find the requested service \"'ucp'\": "}
...ignoring

TASK [cleanup ucp files from remote] *******************************************
ok: [node1] => (item=ucp-fingerprint)
ok: [node2] => (item=ucp-fingerprint)
ok: [node2] => (item=ucp-instance-id)
ok: [node1] => (item=ucp-instance-id)
ok: [node2] => (item=ucp-certificate-backup.tar)
ok: [node1] => (item=ucp-certificate-backup.tar)

TASK [cleanup ucp generated docker config file] ********************************
ok: [node1]
ok: [node2]

TASK [cleanup iptables for ucp] ************************************************
failed: [node2] (item=12376) => {"changed": true, "cmd": "iptables -D INPUT -p tcp --dport 12376 -j ACCEPT -m comment --comment \"ucp traffic (12376)\"", "delta": "0:00:00.003703", "end": "2016-07-22 10:04:03.656834", "failed": true, "item": "12376", "rc": 1, "start": "2016-07-22 10:04:03.653131", "stderr": "iptables: Bad rule (does a matching rule exist in that chain?).", "stdout": "", "stdout_lines": [], "warnings": []}
failed: [node1] (item=12376) => {"changed": true, "cmd": "iptables -D INPUT -p tcp --dport 12376 -j ACCEPT -m comment --comment \"ucp traffic (12376)\"", "delta": "0:00:00.003719", "end": "2016-07-22 10:04:03.650062", "failed": true, "item": "12376", "rc": 1, "start": "2016-07-22 10:04:03.646343", "stderr": "iptables: Bad rule (does a matching rule exist in that chain?).", "stdout": "", "stdout_lines": [], "warnings": []}
failed: [node1] (item=12379) => {"changed": true, "cmd": "iptables -D INPUT -p tcp --dport 12379 -j ACCEPT -m comment --comment \"ucp traffic (12379)\"", "delta": "0:00:00.003726", "end": "2016-07-22 10:04:03.898532", "failed": true, "item": "12379", "rc": 1, "start": "2016-07-22 10:04:03.894806", "stderr": "iptables: Bad rule (does a matching rule exist in that chain?).", "stdout": "", "stdout_lines": [], "warnings": []}
failed: [node2] (item=12379) => {"changed": true, "cmd": "iptables -D INPUT -p tcp --dport 12379 -j ACCEPT -m comment --comment \"ucp traffic (12379)\"", "delta": "0:00:00.003723", "end": "2016-07-22 10:04:03.916546", "failed": true, "item": "12379", "rc": 1, "start": "2016-07-22 10:04:03.912823", "stderr": "iptables: Bad rule (does a matching rule exist in that chain?).", "stdout": "", "stdout_lines": [], "warnings": []}
failed: [node2] (item=12380) => {"changed": true, "cmd": "iptables -D INPUT -p tcp --dport 12380 -j ACCEPT -m comment --comment \"ucp traffic (12380)\"", "delta": "0:00:00.003705", "end": "2016-07-22 10:04:04.145310", "failed": true, "item": "12380", "rc": 1, "start": "2016-07-22 10:04:04.141605", "stderr": "iptables: Bad rule (does a matching rule exist in that chain?).", "stdout": "", "stdout_lines": [], "warnings": []}
failed: [node1] (item=12380) => {"changed": true, "cmd": "iptables -D INPUT -p tcp --dport 12380 -j ACCEPT -m comment --comment \"ucp traffic (12380)\"", "delta": "0:00:00.003723", "end": "2016-07-22 10:04:04.143971", "failed": true, "item": "12380", "rc": 1, "start": "2016-07-22 10:04:04.140248", "stderr": "iptables: Bad rule (does a matching rule exist in that chain?).", "stdout": "", "stdout_lines": [], "warnings": []}
failed: [node1] (item=12381) => {"changed": true, "cmd": "iptables -D INPUT -p tcp --dport 12381 -j ACCEPT -m comment --comment \"ucp traffic (12381)\"", "delta": "0:00:00.003756", "end": "2016-07-22 10:04:04.367526", "failed": true, "item": "12381", "rc": 1, "start": "2016-07-22 10:04:04.363770", "stderr": "iptables: Bad rule (does a matching rule exist in that chain?).", "stdout": "", "stdout_lines": [], "warnings": []}
failed: [node2] (item=12381) => {"changed": true, "cmd": "iptables -D INPUT -p tcp --dport 12381 -j ACCEPT -m comment --comment \"ucp traffic (12381)\"", "delta": "0:00:00.003720", "end": "2016-07-22 10:04:04.370190", "failed": true, "item": "12381", "rc": 1, "start": "2016-07-22 10:04:04.366470", "stderr": "iptables: Bad rule (does a matching rule exist in that chain?).", "stdout": "", "stdout_lines": [], "warnings": []}
failed: [node2] (item=12382) => {"changed": true, "cmd": "iptables -D INPUT -p tcp --dport 12382 -j ACCEPT -m comment --comment \"ucp traffic (12382)\"", "delta": "0:00:00.003661", "end": "2016-07-22 10:04:04.608520", "failed": true, "item": "12382", "rc": 1, "start": "2016-07-22 10:04:04.604859", "stderr": "iptables: Bad rule (does a matching rule exist in that chain?).", "stdout": "", "stdout_lines": [], "warnings": []}
failed: [node1] (item=12382) => {"changed": true, "cmd": "iptables -D INPUT -p tcp --dport 12382 -j ACCEPT -m comment --comment \"ucp traffic (12382)\"", "delta": "0:00:00.003718", "end": "2016-07-22 10:04:04.606207", "failed": true, "item": "12382", "rc": 1, "start": "2016-07-22 10:04:04.602489", "stderr": "iptables: Bad rule (does a matching rule exist in that chain?).", "stdout": "", "stdout_lines": [], "warnings": []}
failed: [node2] (item=12383) => {"changed": true, "cmd": "iptables -D INPUT -p tcp --dport 12383 -j ACCEPT -m comment --comment \"ucp traffic (12383)\"", "delta": "0:00:00.003699", "end": "2016-07-22 10:04:04.850790", "failed": true, "item": "12383", "rc": 1, "start": "2016-07-22 10:04:04.847091", "stderr": "iptables: Bad rule (does a matching rule exist in that chain?).", "stdout": "", "stdout_lines": [], "warnings": []}
failed: [node1] (item=12383) => {"changed": true, "cmd": "iptables -D INPUT -p tcp --dport 12383 -j ACCEPT -m comment --comment \"ucp traffic (12383)\"", "delta": "0:00:00.003797", "end": "2016-07-22 10:04:04.843338", "failed": true, "item": "12383", "rc": 1, "start": "2016-07-22 10:04:04.839541", "stderr": "iptables: Bad rule (does a matching rule exist in that chain?).", "stdout": "", "stdout_lines": [], "warnings": []}
failed: [node2] (item=12384) => {"changed": true, "cmd": "iptables -D INPUT -p tcp --dport 12384 -j ACCEPT -m comment --comment \"ucp traffic (12384)\"", "delta": "0:00:00.003738", "end": "2016-07-22 10:04:05.077697", "failed": true, "item": "12384", "rc": 1, "start": "2016-07-22 10:04:05.073959", "stderr": "iptables: Bad rule (does a matching rule exist in that chain?).", "stdout": "", "stdout_lines": [], "warnings": []}
failed: [node1] (item=12384) => {"changed": true, "cmd": "iptables -D INPUT -p tcp --dport 12384 -j ACCEPT -m comment --comment \"ucp traffic (12384)\"", "delta": "0:00:00.003751", "end": "2016-07-22 10:04:05.073368", "failed": true, "item": "12384", "rc": 1, "start": "2016-07-22 10:04:05.069617", "stderr": "iptables: Bad rule (does a matching rule exist in that chain?).", "stdout": "", "stdout_lines": [], "warnings": []}
failed: [node1] (item=12385) => {"changed": true, "cmd": "iptables -D INPUT -p tcp --dport 12385 -j ACCEPT -m comment --comment \"ucp traffic (12385)\"", "delta": "0:00:00.003685", "end": "2016-07-22 10:04:05.293722", "failed": true, "item": "12385", "rc": 1, "start": "2016-07-22 10:04:05.290037", "stderr": "iptables: Bad rule (does a matching rule exist in that chain?).", "stdout": "", "stdout_lines": [], "warnings": []}
failed: [node2] (item=12385) => {"changed": true, "cmd": "iptables -D INPUT -p tcp --dport 12385 -j ACCEPT -m comment --comment \"ucp traffic (12385)\"", "delta": "0:00:00.003695", "end": "2016-07-22 10:04:05.302624", "failed": true, "item": "12385", "rc": 1, "start": "2016-07-22 10:04:05.298929", "stderr": "iptables: Bad rule (does a matching rule exist in that chain?).", "stdout": "", "stdout_lines": [], "warnings": []}
failed: [node1] (item=12386) => {"changed": true, "cmd": "iptables -D INPUT -p tcp --dport 12386 -j ACCEPT -m comment --comment \"ucp traffic (12386)\"", "delta": "0:00:00.003722", "end": "2016-07-22 10:04:05.517672", "failed": true, "item": "12386", "rc": 1, "start": "2016-07-22 10:04:05.513950", "stderr": "iptables: Bad rule (does a matching rule exist in that chain?).", "stdout": "", "stdout_lines": [], "warnings": []}
failed: [node2] (item=12386) => {"changed": true, "cmd": "iptables -D INPUT -p tcp --dport 12386 -j ACCEPT -m comment --comment \"ucp traffic (12386)\"", "delta": "0:00:00.003787", "end": "2016-07-22 10:04:05.535632", "failed": true, "item": "12386", "rc": 1, "start": "2016-07-22 10:04:05.531845", "stderr": "iptables: Bad rule (does a matching rule exist in that chain?).", "stdout": "", "stdout_lines": [], "warnings": []}
failed: [node1] (item=2375) => {"changed": true, "cmd": "iptables -D INPUT -p tcp --dport 2375 -j ACCEPT -m comment --comment \"ucp traffic (2375)\"", "delta": "0:00:00.003685", "end": "2016-07-22 10:04:05.749646", "failed": true, "item": "2375", "rc": 1, "start": "2016-07-22 10:04:05.745961", "stderr": "iptables: Bad rule (does a matching rule exist in that chain?).", "stdout": "", "stdout_lines": [], "warnings": []}
failed: [node2] (item=2375) => {"changed": true, "cmd": "iptables -D INPUT -p tcp --dport 2375 -j ACCEPT -m comment --comment \"ucp traffic (2375)\"", "delta": "0:00:00.003696", "end": "2016-07-22 10:04:05.760677", "failed": true, "item": "2375", "rc": 1, "start": "2016-07-22 10:04:05.756981", "stderr": "iptables: Bad rule (does a matching rule exist in that chain?).", "stdout": "", "stdout_lines": [], "warnings": []}
failed: [node1] (item=2376) => {"changed": true, "cmd": "iptables -D INPUT -p tcp --dport 2376 -j ACCEPT -m comment --comment \"ucp traffic (2376)\"", "delta": "0:00:00.003743", "end": "2016-07-22 10:04:05.989771", "failed": true, "item": "2376", "rc": 1, "start": "2016-07-22 10:04:05.986028", "stderr": "iptables: Bad rule (does a matching rule exist in that chain?).", "stdout": "", "stdout_lines": [], "warnings": []}
failed: [node2] (item=2376) => {"changed": true, "cmd": "iptables -D INPUT -p tcp --dport 2376 -j ACCEPT -m comment --comment \"ucp traffic (2376)\"", "delta": "0:00:00.003710", "end": "2016-07-22 10:04:05.996012", "failed": true, "item": "2376", "rc": 1, "start": "2016-07-22 10:04:05.992302", "stderr": "iptables: Bad rule (does a matching rule exist in that chain?).", "stdout": "", "stdout_lines": [], "warnings": []}
failed: [node1] (item=443) => {"changed": true, "cmd": "iptables -D INPUT -p tcp --dport 443 -j ACCEPT -m comment --comment \"ucp traffic (443)\"", "delta": "0:00:00.004175", "end": "2016-07-22 10:04:06.216806", "failed": true, "item": "443", "rc": 1, "start": "2016-07-22 10:04:06.212631", "stderr": "iptables: Bad rule (does a matching rule exist in that chain?).", "stdout": "", "stdout_lines": [], "warnings": []}
...ignoring
failed: [node2] (item=443) => {"changed": true, "cmd": "iptables -D INPUT -p tcp --dport 443 -j ACCEPT -m comment --comment \"ucp traffic (443)\"", "delta": "0:00:00.003672", "end": "2016-07-22 10:04:06.222960", "failed": true, "item": "443", "rc": 1, "start": "2016-07-22 10:04:06.219288", "stderr": "iptables: Bad rule (does a matching rule exist in that chain?).", "stdout": "", "stdout_lines": [], "warnings": []}
...ignoring

TASK [stop etcd] ***************************************************************
changed: [node2]
changed: [node1]

TASK [cleanup iptables for etcd] ***********************************************
changed: [node1] => (item=2379)
changed: [node2] => (item=2379)
changed: [node1] => (item=4001)
changed: [node2] => (item=4001)
changed: [node1] => (item=2380)
changed: [node2] => (item=2380)
changed: [node1] => (item=7001)
changed: [node2] => (item=7001)

TASK [stop nfs services (redhat)] **********************************************
ok: [node1] => (item=rpcbind)
ok: [node2] => (item=rpcbind)
ok: [node1] => (item=nfs-server)
ok: [node2] => (item=nfs-server)
ok: [node1] => (item=rpc-statd)
ok: [node2] => (item=rpc-statd)
ok: [node1] => (item=nfs-idmapd)
ok: [node2] => (item=nfs-idmapd)

TASK [stop nfs services (debian)] **********************************************
failed: [node1] (item=nfs-kernel-server) => {"failed": true, "item": "nfs-kernel-server", "msg": "systemd could not find the requested service \"'nfs-kernel-server'\": "}
failed: [node2] (item=nfs-kernel-server) => {"failed": true, "item": "nfs-kernel-server", "msg": "systemd could not find the requested service \"'nfs-kernel-server'\": "}
failed: [node1] (item=nfs-common) => {"failed": true, "item": "nfs-common", "msg": "systemd could not find the requested service \"'nfs-common'\": "}
...ignoring
failed: [node2] (item=nfs-common) => {"failed": true, "item": "nfs-common", "msg": "systemd could not find the requested service \"'nfs-common'\": "}
...ignoring

TASK [stop docker] *************************************************************
changed: [node1]
changed: [node2]

TASK [stop docker tcp socket] **************************************************
changed: [node2]
changed: [node1]

TASK [cleanup iptables for docker] *********************************************
changed: [node1] => (item=2385)
changed: [node2] => (item=2385)

PLAY RECAP *********************************************************************
node1                      : ok=39   changed=14   unreachable=0    failed=0   
node2                      : ok=39   changed=14   unreachable=0    failed=0   

Setting up services on nodes

PLAY [devtest] *****************************************************************
skipping: no hosts matched

PLAY [volplugin-test] **********************************************************
skipping: no hosts matched

PLAY [cluster-node] ************************************************************
skipping: no hosts matched

PLAY [cluster-control] *********************************************************
skipping: no hosts matched

PLAY [service-master] **********************************************************
skipping: no hosts matched

PLAY [service-worker] **********************************************************
skipping: no hosts matched

PLAY [netplugin-node] **********************************************************

TASK [setup] *******************************************************************
ok: [node2]
ok: [node1]

TASK [base : include] **********************************************************
skipping: [node1]
skipping: [node2]

TASK [base : include] **********************************************************
included: /home/admin/src/github.com/contiv/netplugin/systemtests/ansible/roles/base/tasks/redhat_tasks.yml for node1, node2

TASK [base : install epel release package (redhat)] ****************************
ok: [node1]
ok: [node2]

TASK [base : install/upgrade base packages (redhat)] ***************************
ok: [node2] => (item=[u'yum-utils', u'ntp', u'unzip', u'bzip2', u'curl', u'python-requests', u'bash-completion', u'libselinux-python', u'e2fsprogs', u'openssh-server'])
ok: [node1] => (item=[u'yum-utils', u'ntp', u'unzip', u'bzip2', u'curl', u'python-requests', u'bash-completion', u'libselinux-python', u'e2fsprogs', u'openssh-server'])

TASK [base : install and start ntp] ********************************************
ok: [node1]
ok: [node2]

TASK [base : include] **********************************************************
included: /home/admin/src/github.com/contiv/netplugin/systemtests/ansible/roles/base/tasks/os_agnostic_tasks.yml for node1, node2

TASK [base : download consul binary] *******************************************
ok: [node1]
ok: [node2]

TASK [base : install consul] ***************************************************
ok: [node1]
ok: [node2]

TASK [docker : check docker version] *******************************************
changed: [node1]
changed: [node2]

TASK [docker : create docker daemon's config directory] ************************
ok: [node1]
ok: [node2]

TASK [docker : setup docker daemon's environment] ******************************
ok: [node1]
ok: [node2]

TASK [docker : include] ********************************************************
skipping: [node1]
skipping: [node2]

TASK [docker : include] ********************************************************
skipping: [node1]
skipping: [node2]

TASK [docker : setup iptables for docker] **************************************
changed: [node1] => (item=2385)
changed: [node2] => (item=2385)

TASK [docker : copy systemd units for docker(enable cluster store) (debian)] ***
skipping: [node1]
skipping: [node2]

TASK [docker : copy systemd units for docker(enable cluster store) (redhat)] ***
ok: [node1]
ok: [node2]

TASK [docker : check docker-tcp socket state] **********************************
changed: [node1]
changed: [node2]

TASK [docker : include] ********************************************************
skipping: [node2]
skipping: [node1]

TASK [docker : copy systemd units for docker tcp socket settings] **************
ok: [node1]
ok: [node2]

TASK [docker : reload systemd configuration] ***********************************
changed: [node1]
changed: [node2]

TASK [docker : stop docker] ****************************************************
ok: [node1]
ok: [node2]

TASK [docker : start docker-tcp service] ***************************************
changed: [node1]
changed: [node2]

TASK [docker : check docker service state] *************************************
changed: [node1]
changed: [node2]

TASK [docker : remove the docker key file, if any. It shall be regenerated by docker on restart] ***
changed: [node1]
changed: [node2]

TASK [docker : reload docker systemd configuration] ****************************
changed: [node1]
changed: [node2]

TASK [docker : restart docker (first time)] ************************************
fatal: [node1]: FAILED! => {"failed": true, "msg": "The conditional check 'thin_provisioned|changed' failed. The error was: |changed expects a dictionary\n\nThe error appears to have been in '/home/admin/src/github.com/contiv/netplugin/systemtests/ansible/roles/docker/tasks/main.yml': line 98, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n#      of some docker bug I've not investigated.\n- name: restart docker (first time)\n  ^ here\n"}
...ignoring
fatal: [node2]: FAILED! => {"failed": true, "msg": "The conditional check 'thin_provisioned|changed' failed. The error was: |changed expects a dictionary\n\nThe error appears to have been in '/home/admin/src/github.com/contiv/netplugin/systemtests/ansible/roles/docker/tasks/main.yml': line 98, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n#      of some docker bug I've not investigated.\n- name: restart docker (first time)\n  ^ here\n"}
...ignoring

TASK [docker : ensure docker is started] ***************************************
changed: [node2]
changed: [node1]

TASK [docker : stat] ***********************************************************
ok: [node1]
ok: [node2]

TASK [docker : Import saved docker images] *************************************
skipping: [node1]
skipping: [node2]

TASK [docker : check docker-compose version] ***********************************
changed: [node1]
changed: [node2]

TASK [docker : download and install docker-compose] ****************************
skipping: [node1]
skipping: [node2]

TASK [docker : check contiv-compose version] ***********************************
changed: [node1]
changed: [node2]

TASK [docker : download contiv-compose] ****************************************
skipping: [node1]
skipping: [node2]

TASK [docker : install contiv-compose] *****************************************
skipping: [node1]
skipping: [node2]

TASK [etcd : download etcdctl v2.3.1] ******************************************
ok: [node1]
ok: [node2]

TASK [etcd : install etcdctl] **************************************************
changed: [node1]
changed: [node2]

TASK [etcd : install etcd v2.3.1] **********************************************
changed: [node2]
changed: [node1]

TASK [etcd : setup iptables for etcd] ******************************************
changed: [node1] => (item=2379)
changed: [node2] => (item=2379)
changed: [node1] => (item=4001)
changed: [node2] => (item=4001)
changed: [node1] => (item=2380)
changed: [node2] => (item=2380)
changed: [node1] => (item=7001)
changed: [node2] => (item=7001)

TASK [etcd : copy the etcd start/stop script] **********************************
ok: [node1]
ok: [node2]

TASK [etcd : copy systemd units for etcd] **************************************
ok: [node1]
ok: [node2]

TASK [etcd : start etcd] *******************************************************
changed: [node1]
changed: [node2]

TASK [swarm : check for swarm image] *******************************************
changed: [node1]
changed: [node2]

TASK [swarm : download swarm container image] **********************************
skipping: [node1]
skipping: [node2]

TASK [swarm : setup iptables for swarm] ****************************************
changed: [node2] => (item=2375)
changed: [node1] => (item=2375)

TASK [swarm : copy the swarm start/stop script] ********************************
ok: [node1]
ok: [node2]

TASK [swarm : copy systemd units for swarm] ************************************
ok: [node1]
ok: [node2]

TASK [swarm : start swarm] *****************************************************
changed: [node1]
changed: [node2]

TASK [ucp : download and install ucp images] ***********************************
skipping: [node1]
skipping: [node2]

TASK [ucp : setup iptables for ucp] ********************************************
skipping: [node1] => (item=12376) 
skipping: [node1] => (item=12379) 
skipping: [node2] => (item=12376) 
skipping: [node2] => (item=12379) 
skipping: [node1] => (item=12380) 
skipping: [node2] => (item=12380) 
skipping: [node2] => (item=12381) 
skipping: [node1] => (item=12381) 
skipping: [node2] => (item=12382) 
skipping: [node1] => (item=12382) 
skipping: [node2] => (item=12383) 
skipping: [node1] => (item=12383) 
skipping: [node1] => (item=12384) 
skipping: [node1] => (item=12385) 
skipping: [node1] => (item=12386) 
skipping: [node1] => (item=2375) 
skipping: [node1] => (item=2376) 
skipping: [node1] => (item=443) 
skipping: [node2] => (item=12384) 
skipping: [node2] => (item=12385) 
skipping: [node2] => (item=12386) 
skipping: [node2] => (item=2375) 
skipping: [node2] => (item=2376) 
skipping: [node2] => (item=443) 

TASK [ucp : copy the ucp license to the remote machine] ************************
skipping: [node1]
skipping: [node2]

TASK [ucp : copy the ucp start/stop script] ************************************
skipping: [node1]
skipping: [node2]

TASK [ucp : copy systemd units for ucp] ****************************************
skipping: [node1]
skipping: [node2]

TASK [ucp : start ucp] *********************************************************
skipping: [node1]
skipping: [node2]

TASK [ucp : create a local fetch directory if it doesn't exist] ****************
skipping: [node1]
skipping: [node2]

TASK [ucp : wait for ucp files to be created, which ensures the service has started] ***
skipping: [node1] => (item=ucp-fingerprint) 
skipping: [node2] => (item=ucp-fingerprint) 
skipping: [node1] => (item=ucp-instance-id) 
skipping: [node1] => (item=ucp-certificate-backup.tar) 
skipping: [node2] => (item=ucp-instance-id) 
skipping: [node2] => (item=ucp-certificate-backup.tar) 

TASK [ucp : fetch the ucp files from master nodes] *****************************
skipping: [node1] => (item=ucp-fingerprint) 
skipping: [node2] => (item=ucp-fingerprint) 
skipping: [node2] => (item=ucp-instance-id) 
skipping: [node1] => (item=ucp-instance-id) 
skipping: [node2] => (item=ucp-certificate-backup.tar) 
skipping: [node1] => (item=ucp-certificate-backup.tar) 

TASK [ucp : copy the ucp files to replicas and worker nodes] *******************
skipping: [node1] => (item=ucp-fingerprint) 
skipping: [node2] => (item=ucp-fingerprint) 
skipping: [node1] => (item=ucp-instance-id) 
skipping: [node2] => (item=ucp-instance-id) 
skipping: [node2] => (item=ucp-certificate-backup.tar) 
skipping: [node1] => (item=ucp-certificate-backup.tar) 

TASK [contiv_network : check dns container image] ******************************
changed: [node2]
changed: [node1]

TASK [contiv_network : pull dns container image] *******************************
skipping: [node1]
skipping: [node2]

TASK [contiv_network : include] ************************************************
included: /home/admin/src/github.com/contiv/netplugin/systemtests/ansible/roles/contiv_network/tasks/ovs.yml for node1, node2

TASK [contiv_network : download ovs binaries (redhat)] *************************
ok: [node1] => (item={u'url': u'https://cisco.box.com/shared/static/zzmpe1zesdpf270k9pml40rlm4o8fs56.rpm', u'dest': u'/tmp/openvswitch-2.3.1-2.el7.x86_64.rpm'})
ok: [node2] => (item={u'url': u'https://cisco.box.com/shared/static/zzmpe1zesdpf270k9pml40rlm4o8fs56.rpm', u'dest': u'/tmp/openvswitch-2.3.1-2.el7.x86_64.rpm'})

TASK [contiv_network : install ovs (redhat)] ***********************************
ok: [node2]
ok: [node1]

TASK [contiv_network : download ovs binaries (debian)] *************************
skipping: [node1] => (item={u'url': u'https://cisco.box.com/shared/static/v1dvgoboo5zgqrtn6tu27vxeqtdo2bdl.deb', u'dest': u'/tmp/ovs-common.deb'}) 
skipping: [node2] => (item={u'url': u'https://cisco.box.com/shared/static/v1dvgoboo5zgqrtn6tu27vxeqtdo2bdl.deb', u'dest': u'/tmp/ovs-common.deb'}) 
skipping: [node1] => (item={u'url': u'https://cisco.box.com/shared/static/ymbuwvt2qprs4tquextw75b82hyaxwon.deb', u'dest': u'/tmp/ovs-switch.deb'}) 
skipping: [node2] => (item={u'url': u'https://cisco.box.com/shared/static/ymbuwvt2qprs4tquextw75b82hyaxwon.deb', u'dest': u'/tmp/ovs-switch.deb'}) 

TASK [contiv_network : install ovs-common (debian)] ****************************
skipping: [node1]
skipping: [node2]

TASK [contiv_network : install ovs (debian)] ***********************************
skipping: [node1]
skipping: [node2]

TASK [contiv_network : start ovs service] **************************************
ok: [node2]
ok: [node1]

TASK [contiv_network : setup ovs] **********************************************
changed: [node2] => (item=tcp:127.0.0.1:6640)
changed: [node1] => (item=tcp:127.0.0.1:6640)
changed: [node2] => (item=ptcp:6640)
changed: [node1] => (item=ptcp:6640)

TASK [contiv_network : check selinux status] ***********************************
changed: [node2]
changed: [node1]

TASK [contiv_network : permit openvswitch_t type in selinux] *******************
changed: [node2]
changed: [node1]

TASK [contiv_network : setup iptables for vxlan vtep port] *********************
changed: [node1] => (item=4789)
changed: [node2] => (item=4789)

TASK [contiv_network : setup iptables for contiv network control plane] ********
changed: [node1] => (item=9001)
changed: [node2] => (item=9001)
changed: [node1] => (item=9002)
changed: [node2] => (item=9002)
changed: [node1] => (item=9003)
changed: [node2] => (item=9003)
changed: [node1] => (item=9999)
changed: [node2] => (item=9999)
changed: [node1] => (item=8080)
changed: [node2] => (item=8080)
changed: [node1] => (item=179)
changed: [node2] => (item=179)

TASK [contiv_network : download netmaster and netplugin] ***********************
changed: [node2]
changed: [node1]

TASK [contiv_network : ensure netplugin directory exists] **********************
ok: [node1]
ok: [node2]

TASK [contiv_network : install netmaster and netplugin] ************************
changed: [node2]
changed: [node1]

TASK [contiv_network : create links for netplugin binaries] ********************
changed: [node1] => (item=netctl)
changed: [node2] => (item=netctl)
ok: [node1] => (item=netmaster)
ok: [node2] => (item=netmaster)
ok: [node1] => (item=netplugin)
ok: [node2] => (item=netplugin)
ok: [node1] => (item=contivk8s)
ok: [node2] => (item=contivk8s)

TASK [contiv_network : copy environment file for netplugin] ********************
ok: [node1]
ok: [node2]

TASK [contiv_network : copy systemd units for netplugin] ***********************
changed: [node1]
changed: [node2]

TASK [contiv_network : copy bash auto complete file for netctl] ****************
ok: [node1]
ok: [node2]

TASK [contiv_network : start netplugin] ****************************************
changed: [node2]
changed: [node1]

TASK [contiv_network : setup netmaster host alias] *****************************
changed: [node1]
changed: [node2]

TASK [contiv_network : setup hostname alias] ***********************************
ok: [node1] => (item={u'regexp': u'^127\\.0\\.0\\.1', u'line': u'127.0.0.1 localhost'})
ok: [node2] => (item={u'regexp': u'^127\\.0\\.0\\.1', u'line': u'127.0.0.1 localhost'})
ok: [node2] => (item={u'regexp': u' apoorva-testbed-2$', u'line': u'10.193.246.71 apoorva-testbed-2'})
ok: [node1] => (item={u'regexp': u' apoorva-testbed-1$', u'line': u'10.193.246.70 apoorva-testbed-1'})

TASK [contiv_network : copy environment file for netmaster] ********************
ok: [node2]
ok: [node1]

TASK [contiv_network : copy systemd units for netmaster] ***********************
changed: [node2]
changed: [node1]

TASK [contiv_network : start netmaster] ****************************************
changed: [node1]
changed: [node2]

TASK [contiv_network : download contivctl] *************************************
ok: [node2]
ok: [node1]

TASK [contiv_network : install contivctl] **************************************
changed: [node2]
changed: [node1]

TASK [contiv_network : include] ************************************************
included: /home/admin/src/github.com/contiv/netplugin/systemtests/ansible/roles/contiv_network/tasks/aci_tasks.yml for node1, node2

TASK [contiv_network : pull aci-gw container] **********************************
changed: [node2]
changed: [node1]

TASK [contiv_network : copy shell script for starting aci-gw] ******************
ok: [node2]
ok: [node1]

TASK [contiv_network : copy systemd units for aci-gw] **************************
ok: [node2]
ok: [node1]

TASK [contiv_network : start aci-gw container] *********************************
ok: [node1]
ok: [node2]

TASK [contiv_network : wait for netmaster to be ready] *************************
changed: [node1]
changed: [node2]

TASK [contiv_network : set aci mode] *******************************************
changed: [node1]

PLAY RECAP *********************************************************************
node1                      : ok=70   changed=36   unreachable=0    failed=0   
node2                      : ok=69   changed=35   unreachable=0    failed=0   

Using default tag: latest
apoorva-testbed-1: Pulling jainvipin/web:latest...
apoorva-testbed-2: Pulling jainvipin/web:latest...
apoorva-testbed-2: Pulling jainvipin/web:latest... : downloaded
apoorva-testbed-1: Pulling jainvipin/web:latest... : downloaded
Using default tag: latest
apoorva-testbed-1: Pulling jainvipin/redis:latest...
apoorva-testbed-2: Pulling jainvipin/redis:latest...
apoorva-testbed-2: Pulling jainvipin/redis:latest... : downloaded
apoorva-testbed-1: Pulling jainvipin/redis:latest... : downloaded
Install complete.
=========================================================
 
Please export DOCKER_HOST=10.193.246.70:2375 in your shell before proceeding
 
=========================================================
